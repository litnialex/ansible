---
- hosts: all_servers
  tasks:
  - import_role:
      name: sdarwin.nagios
    vars:
      ansible_become: true
      run_nagios_client: true
    tags: nrpe
    when: "'monitoring_servers' in groups"
  roles:
  - { role: common, become: true, tags: common }

- hosts: staging_servers
  roles:
  - { role: debops.pki/env, become: true, tags: pki }
  - { role: debops.secret, become: true, tags: pki , secret_directories: '{{ pki_env_secret_directories }}' }
  - { role: debops.pki, become: true, tags: pki }

- hosts: dhcp_servers
  roles:
  - { role: 'dhcp_server', become: true, tags: dhcp }

- hosts: bind_servers
  roles:
  - { role: bind, become: true, tags: bind }
  - { role: backup, become: no, tags: backup, backup_src: [/etc/bind/named.conf.local] }
  - { role: backup, become: no, tags: backup, backup_src: ['{{ bind_masterzones_path }}'], when: bind_config_master_zones }

- hosts: tftp_servers
  roles:
  - { role: atftpd, become: true, tags: tftp }

- hosts: nfs_servers
  roles:
  - { role: nfs_server, become: true, tags: nfs }

- hosts: moinmoin_servers
  roles:
  - { role: moinmoin, become: true, tags: moin }

- hosts: trac_servers
  roles:
  - { role: trac, become: true, tags: trac }

- hosts: ftp_servers
  roles:
  - { role: proftpd, become: true, tags: ftp }

- hosts: mysql_servers
  roles:
  - { role: mysql, become: true, tags: mysql }

- hosts: cacti_servers
  roles:
  - { role: cacti, become: true, tags: cacti }

- hosts: megaraid_servers
  roles:
  - { role: megaraid, become: true, tags: megaraid }

- hosts: workstations
  roles:
  - { role: workstation, become: true, tags: workstation }

- hosts: kvm_servers
  roles:
  - { role: kvm, become: true, tags: kvm }
  - { role: backup, become: no, tags: backup, backup_src: [/etc/libvirt/qemu] }

- hosts: debootstrap_servers
  roles:
  - { role: debootstrap, become: true, tags: debootstrap }

- hosts: nginx_servers
  roles:
  - { role: debops.nginx, become: true, tags: nginx }

- hosts: mail_servers
  roles:
  - { role: mail_server, become: true, tags: mail}
  - { role: backup, become: no, tags: backup, backup_src: [/etc/postfix] }

- hosts: squid_servers
  roles:
  - { role: squid, become: true, tags: squid}
  - { role: backup, become: no, tags: backup, backup_src: [/etc/squid3] }

- hosts: monitoring_servers
  roles:
  - { role: 'sdarwin.nagios', become: true, run_nagios_server: true, tags: nagios}

- hosts: quagga_servers
  roles:
  - { role: 'quagga', become: true, tags: quagga}
  - { role: backup, become: no, tags: backup, backup_src: [/etc/quagga] }

- hosts: fw_servers
  roles:
  - { role: backup, become: no, tags: backup, backup_src: [/etc/network/fw] }

- hosts: asterisk_servers
  roles:
  - { role: asterisk, become: true, tags: asterisk }
  - { role: backup, become: no, tags: backup, backup_src: [/etc/asterisk] }

- hosts: postgresql_servers
  roles:
  - { role: anxs.postgresql, become: true, tags: postgresql }
  - { role: backup, become: no, tags: backup, backup_src: [/etc/postgresql] }

- hosts: odoo_servers
  roles:
  - { role: sebalix.odoo, become: true, tags: odoo }
  - { role: backup, become: no, tags: backup, backup_src: [/etc/odoo] }

- hosts: log_servers
  tags: elk
  roles:
  - { role: java, become: true, tags: java }
  - { role: elasticsearch, become: true, tags: es }
  - { role: kibana, become: true, tags: kibana }
  - { role: syslog-ng, become: true, tags: syslog-ng }
  - { role: logstash, become: true, tags: logstash }
  - { role: curator, become: true, tags: curator }

- hosts: all_servers
  strategy: free
  roles:
  - { role: backup, become: no, tags: backup, backup_src: '{{ backup_src_all_servers }}' }

