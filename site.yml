---
- hosts: all_servers
  environment: '{{ custom_env | default("{}") }}'
  roles:
  - { role: common, become: true, tags: common }
  - { role: 'sdarwin.nagios', become: true, run_nagios_client: true, tags: nrpe, when: "'monitoring_servers' in groups" }

- hosts: staging_servers
  roles:
  - { role: debops.pki/env, become: true, tags: pki }
  - { role: debops.secret, become: true, tags: pki , secret_directories: '{{ pki_env_secret_directories }}' }
  - { role: debops.pki, become: true, tags: pki }

- hosts: bind_servers
  environment: '{{ custom_env | default("{}") }}'
  roles:
  - { role: bind, become: true, tags: bind }
  - { role: backup, become: no, tags: backup, backup_src: [/etc/bind/named.conf.local] }

- hosts: dhcp_servers
  environment: '{{ custom_env | default("{}") }}'
  roles:
  - { role: 'dhcp_server', become: true, tags: dhcp }

- hosts: vmware_guests
  environment: '{{ custom_env | default("{}") }}'
  tasks:
  - apt: pkg=open-vm-tools
    tags: vm
    become: true

- hosts: tftp_servers
  environment: '{{ custom_env | default("{}") }}'
  roles:
  - { role: atftpd, become: true, tags: tftp }

- hosts: nfs_servers
  environment: '{{ custom_env | default("{}") }}'
  roles:
  - { role: nfs_server, become: true, tags: nfs }

- hosts: moinmoin_servers
  environment: '{{ custom_env | default("{}") }}'
  roles:
  - { role: moinmoin, become: true, tags: moin }

- hosts: trac_servers
  environment: '{{ custom_env | default("{}") }}'
  roles:
  - { role: trac, become: true, tags: trac }

- hosts: ftp_servers
  environment: '{{ custom_env | default("{}") }}'
  roles:
  - { role: proftpd, become: true, tags: ftp }

- hosts: mysql_servers
  environment: '{{ custom_env | default("{}") }}'
  roles:
  - { role: mysql, become: true, tags: mysql }

- hosts: cacti_servers
  environment: '{{ custom_env | default("{}") }}'
  roles:
  - { role: cacti, become: true, tags: cacti }

- hosts: megaraid_servers
  environment: '{{ custom_env | default("{}") }}'
  roles:
  - { role: megaraid, become: true, tags: megaraid }

- hosts: workstations
  environment: '{{ custom_env | default("{}") }}'
  roles:
  - { role: workstation, become: true, tags: workstation }

- hosts: kvm_servers
  environment: '{{ custom_env | default("{}") }}'
  roles:
  - { role: kvm, become: true, tags: kvm }
  - { role: backup, become: no, tags: backup, backup_src: [/etc/libvirt/qemu] }

- hosts: debootstrap_servers
  environment: '{{ custom_env | default("{}") }}'
  roles:
  - { role: debootstrap, become: true, tags: debootstrap }

- hosts: nginx_servers
  environment: '{{ custom_env | default("{}") }}'
  roles:
  - { role: debops.nginx, become: true, tags: nginx,mail }

- hosts: mail_servers
  environment: '{{ custom_env | default("{}") }}'
  roles:
  - { role: debops.nginx, become: true, tags: nginx,mail }
  - { role: mail_server, become: true, tags: mail}
  - { role: backup, become: no, tags: backup, backup_src: [/etc/postfix] }

- hosts: squid_servers
  environment: '{{ custom_env | default("{}") }}'
  roles:
  - { role: squid, become: true, tags: squid}

- hosts: monitoring_servers
  environment: '{{ custom_env | default("{}") }}'
  roles:
  - { role: 'sdarwin.nagios', become: true, run_nagios_server: true, tags: nagios}

- hosts: quagga_servers
  environment: '{{ custom_env | default("{}") }}'
  roles:
  - { role: 'quagga', become: true, tags: quagga}
  - { role: backup, become: no, tags: backup, backup_src: [/etc/quagga] }

- hosts: fw_servers
  roles:
  - { role: backup, become: no, tags: backup, backup_src: [/etc/network/fw] }

- hosts: asterisk_servers
  roles:
  - { role: asterisk, become: true, tags: asterisk }
  - { role: backup, become: no, tags: backup, backup_src: [/etc/asterisk] }

- hosts: log_servers
  tags: elk
  roles:
  - { role: java, become: true, tags: java }
  - { role: elasticsearch, become: true, tags: es }
  - { role: kibana, become: true, tags: kibana }
  - { role: syslog-ng, become: true, tags: syslog-ng }
  - { role: logstash, become: true, tags: logstash }
  - { role: curator, become: true, tags: curator }
  - { role: logrotate, become: true, tags: logrotate }

- hosts: all_servers
  strategy: free
  roles:
  - { role: backup, become: no, tags: backup, backup_src: '{{ backup_src_all_servers }}' }

