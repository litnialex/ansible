- name: Install debootstrap
  apt: state=present name=debootstrap

- name: Include os specific variables
  include_vars: 'os_{{ debootstrap_os }}.yml'

- stat: path="{{ debootstrap_path }}/etc"
  register: debootstrap_etc

- name: "Debootstrap {{ debootstrap_os }} {{ debootstrap_os_version }} into {{ debootstrap_path }}"
  shell: >
    debootstrap {{debootstrap_args}} --arch {{ debootstrap_arch }} --include={{ debootstrap_pkgs | join(',') }}
    {{ debootstrap_os_version }} {{ debootstrap_path }}/ {{ preffered_mirror }}/{{ debootstrap_os }}
  when: not debootstrap_etc.stat.exists

- name: Set hostname
  copy:
    dest: "{{ debootstrap_path }}/etc/hostname"
    content: "{{ debootstrap_hostname }}.{{ debootstrap_domain }}"

- name: Generate network/interfaces
  template:
    src: interfaces
    dest: "{{ debootstrap_path }}/etc/network/interfaces"

- name: Set root password
  lineinfile:
    dest: "{{ debootstrap_path }}/etc/shadow"
    state: present
    regexp: '^root.*'
    line: 'root:{{ debootstrap_root_password | d(root_password) }}:16570:0:99999:7:::'

- name: Set ssh PermitRootLogin yes
  lineinfile:
    dest: "{{ debootstrap_path }}/etc/ssh/sshd_config"
    state: present
    regexp: '^PermitRootLogin.*'
    line: 'PermitRootLogin yes'

- name: Set ssh Port
  lineinfile:
    dest: "{{ debootstrap_path }}/etc/ssh/sshd_config"
    state: present
    regexp: '^Port.*'
    line: 'Port {{ debootstrap_ssh_listen_port | d(ssh_listen_port) }}'
  when: ssh_listen_port is defined

- name: Create SSH Keys Dir
  file: dest='{{ debootstrap_path }}/root/.ssh' state=directory mode=0600

- name: SSH Copy Root Key
  copy: dest='{{ debootstrap_path }}/root/.ssh/authorized_keys' content='{{ root_pubkey }}\n' mode=0600

- name: Create /etc/fstab
  copy: dest='{{ debootstrap_path }}/etc/fstab' content='/dev/root / auto defaults 0 1\n'

- name: Create /etc/resolv.conf
  copy: dest='{{ debootstrap_path }}/etc/' src=/etc/resolv.conf remote_src=yes

