---
- name: install bind packages
  apt: pkg={{ item }} state={{ bind_pkg_state }}
  with_items: '{{ bind_pkgs }}'
  tags: package

- name: setup zone directories
  file: dest={{ bind_base_zones_path }}/{{ item }} state=directory owner={{ bind_user }} group={{ bind_group }} mode=0755
  with_items:
  - masters
  - slaves
  tags: bindconf

- name: setup log directory
  file: dest={{ bind_log_path }} state=directory owner={{ bind_user }} group={{ bind_group }}
  notify: restart bind
  tags: bindconf

- name: setup zones
  template: src=named.conf.local.{{ item }}.j2 dest={{ bind_config_basepath }}/named.conf.local.{{ item }} owner={{ bind_user }} group={{ bind_group }} mode=0600 backup=yes
  with_items:
  - master
  - slave
  - forward
  notify: reload bind
  tags: bindconf

- name: configure bind options
  template: src=named.conf.options.j2 dest={{ bind_config_basepath }}/named.conf.options owner={{ bind_user }} group={{ bind_group }} mode=0600 backup=yes
  notify: restart bind
  tags: bindconf

- name: configure bind
  copy: src=named.conf dest={{ bind_config_basepath }}/named.conf owner={{ bind_user }} group={{ bind_group }} mode=0600 validate='named-checkconf %s'
  notify: restart bind
  tags: bindconf

- name: copy master zone files
  copy: src=files/dns/{{ item.file | default(item.name) }} dest={{ bind_base_zones_path }}/{{bind_masterzones_path}} owner={{ bind_user }} group={{ bind_group }}
  with_items: '{{ bind_config_master_zones }}'
  notify: reload bind
  tags: bindzones

- name: start/stop bind service
  service: name={{ bind_service_name }} state={{ bind_service_state }} enabled={{ bind_service_enabled }}
  tags: service

- name: Update single master zone
  copy: src=files/dns/{{ file }} dest={{ bind_base_zones_path }}/{{bind_masterzones_path}} owner={{ bind_user }} group={{ bind_group }}
  notify: reload bind
  tags: bindzone
  when: 
    - file is defined
    - bind_config_master_zones != []

