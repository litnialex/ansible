---
# VIRTUAL HOST LIVECYCLE 
# ansible-playbook new_guest.xml -l kvm2 -e 'name=newgestname vlan=27 ip=10.55.66.77/16 gateway=10.55.1.1 size=10G ram_megabytes=2048'
# add newguestname to DNS
# ansible-playbook site.yml -t common -l newgestname -u root
# ansible-playbook users.yml -l newgestname -u root
# ansible-playbook remove_guest.yml -e name=newgestname

- hosts: kvm_servers
  vars:
  - name: newguestname
  - size: 3G
  - ram_megabytes: 1024
  - vcpu_count: 2
  - os: debian
  - os_version: jessie
  - vlan: 400
  - ip: dhcp
  #- ip: 192.168.78.90/24
  #- gateway: 192.168.78.1

  pre_tasks:
  - lvol: vg=vg0 lv={{ name }} size={{ size }}
  - shell: losetup -f
    register: loopback
  - command: losetup {{ loopback.stdout }} /dev/vg0/{{ name }}
  - command: parted -s {{ loopback.stdout }} -- mklabel msdos mkpart primary 2048s -1s
  - filesystem: dev={{ loopback.stdout }}p1 fstype=ext4
  - mount: src={{ loopback.stdout }}p1 name=/mnt/{{ name }} fstype=auto opts=noauto,defaults state=mounted

  roles:
  - role: debootstrap
    debootstrap_path: "/mnt/{{ name }}"
    debootstrap_os: "{{ os }}"
    debootstrap_os_version: "{{ os_version }}"
    debootstrap_hostname: "{{ name }}"

  tasks:
  - mount: name=/mnt/{{ name }} state=unmounted
  - command: losetup -d {{ loopback.stdout }}

  - name: running setup to gather facts
    setup:
    tags: always
    when: ansible_os_family is not defined

  - name: define new guest
    virt: name="{{ name }}" command=define xml="{{ lookup('template', 'files/new_guest_{{ inventory_hostname }}.xml') }}"
    tags: define

  - name: start new guest
    virt: name="{{ name }}" state=running
    tags: start

