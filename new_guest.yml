---
# VIRTUAL HOST LIVECYCLE 
# ansible-playbook new_guest.xml -l kvm2 -e 'name=newgestname vlan=27 ip=10.55.66.77/16 gateway=10.55.1.1 disk=10G ram=2048'
# add newguestname to DNS
# ansible-playbook site.yml -t common -l newgestname -u root
# ansible-playbook users.yml -l newgestname -u root
# ansible-playbook remove_guest.yml -e name=newgestname

- hosts: kvm_servers
  vars:
  - ansible_become: true
  - name: newguestname
  - disk: 3G
  - ram: 1024
  - cpu: 1
  - os: debian
  - os_version: stretch
  - vlan: 400
  - ip: dhcp
  #- ip: 192.168.78.90/24
  #- gateway: 192.168.78.1

  pre_tasks:
  - setup:
  - lvol: vg=vg0 lv={{ name }} size={{ disk }}
  - shell: losetup -f
    register: loopback
  - command: losetup {{ loopback.stdout }} /dev/vg0/{{ name }}
  - command: parted -s {{ loopback.stdout }} -- mklabel msdos mkpart primary 2048s -1s
  - filesystem: dev={{ loopback.stdout }}p1 fstype=ext4 force=yes
  - mount: src={{ loopback.stdout }}p1 name=/mnt/{{ name }} fstype=auto opts=noauto,defaults state=mounted

  roles:
  - role: debootstrap
    debootstrap_path: "/mnt/{{ name }}"
    debootstrap_os: "{{ os }}"
    debootstrap_os_version: "{{ os_version }}"
    debootstrap_hostname: "{{ name }}"

  tasks:
  - shell: "ls -1 /mnt/{{ name }}/boot/vmlinuz*"
    register: ls_vmlinuz
  - set_fact: guest_kversion="{{ ls_vmlinuz.stdout_lines[0] | regex_replace('.*vmlinuz-(.*)$', '\\1') }}"
  - command: grub-install --modules=part_msdos.mod --boot-directory='/mnt/{{ name }}/boot' {{ loopback.stdout }}
  - template: dest='/mnt/{{ name }}/boot/grub/grub.cfg' src=templates/new_guest_grub.cfg
  - mount: name=/mnt/{{ name }} state=unmounted
  - command: losetup -d {{ loopback.stdout }}
  - file: dest={{ loopback.stdout }}p1 state=absent

  - name: define new guest
    virt: name="{{ name }}" command=define xml="{{ lookup('template', 'templates/new_guest_template.xml') }}"
    tags: define

  - name: start new guest
    virt: name="{{ name }}" state=running
    tags: start

